{"filter":false,"title":"main.cpp","tooltip":"/CS235/main.cpp","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":234,"column":2},"action":"insert","lines":["#include <iostream>","#include <fstream>","#include <string>","#include <sstream>","#include <vector>","#include \"Cdh.h\"","#include \"Cr.h\"","#include \"Csg.h\"","#include \"Snap.h\"","using namespace std;","","#ifdef _MSC_VER","#define _CRTDBG_MAP_ALLOC","#include <crtdbg.h>","#define VS_MEM_CHECK _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);","#else","#define VS_MEM_CHECK","#endif","","","int main(int argc, char* argv[])","{","\tVS_MEM_CHECK","\t","\tif (argc < 3) {","\t\tcerr << \"Please provide name of input and output files\";","\t\treturn 1;","\t}","\tcout << \"Input file: \" << argv[1] << endl;","\tifstream infile(argv[1]);","\tif (!infile) {","\t\tcerr << \"Unable to open \" << argv[1] << \" for input\";","\t\treturn 2;","\t}","\tcout << \"Output file: \" << argv[2] << \" for input\";","\tofstream outfile(argv[2]);","\tif (!outfile) {","\t\tinfile.close();","\t\tcerr << \"Unable to open \" << argv[2] << \" for output\";","\t\treturn 3;","\t}","\tstring line;","\tvector<School*> mySchool;","\t//vector<School*> myCsg;","\t//vector<School*> myCr;","\t//vector<School*> myCdh;","\toutfile << \"Input Strings:\\n\";","\twhile (!infile.eof()) {","\t\tgetline(infile, line);","\t\tstring firstThree = line.substr(0, line.find(\"(\"));","\t\tif (firstThree == \"snap\") {","\t\t\tint stuNum=0;","\t\t\tstring pNum=\"\";","\t\t\tstring name=\"\";","\t\t\tstring a=\"\";","\t\t\tstringstream ss;","\t\t\tss<<line.substr(5, line.find(\",\"));","\t\t\tss >> stuNum;","\t\t\tint startPos = line.find(\",\") + 1;","\t\t\twhile (line.substr(startPos, 1)!=\",\") {","\t\t\t\tname += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tstartPos++;","\t\t\twhile (line.substr(startPos, 1) != \",\") {","\t\t\t\ta += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tstartPos++;","\t\t\tpNum= line.substr(startPos, 8);","\t\t\tSchool* mySnap= new Snap(stuNum,name,a,pNum);","\t\t\tmySchool.push_back(mySnap);","\t\t\toutfile << line;","\t\t}","\t\telse if (firstThree == \"csg\") {","\t\t\tint stuNum = 0;","\t\t\tstring grade = \"\";","\t\t\tstring className = \"\";","\t\t\tstringstream ss;","\t\t\tint startPos = 4;","\t\t\twhile (line.substr(startPos, 1) != \",\") {","\t\t\t\tclassName += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tstartPos++;","\t\t\tstring stuNumString=\"\";","\t\t\twhile (line.substr(startPos, 1) != \",\") {","\t\t\t\tstuNumString += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tss << stuNumString;","\t\t\tss >> stuNum;","\t\t\tstartPos++;","\t\t\twhile (line.substr(startPos, 1) != \")\") { //grab everything until the last )","\t\t\t\tgrade += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tSchool* mySnap = new Csg(className, stuNum,  grade);","\t\t\t//myCsg.push_back(mySnap);","\t\t\tmySchool.push_back(mySnap);","\t\t\toutfile << line;","\t\t}","\t\telse if (firstThree == \"cdh\") {","\t\t\tstring className = \"\";","\t\t\tstring day = \"\";","\t\t\tstring hour = \"\";","\t\t\tint startPos = 4;","\t\t\twhile (line.substr(startPos, 1) != \",\") {","\t\t\t\tclassName += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tstartPos++;","\t\t\twhile (line.substr(startPos, 1) != \",\") {","\t\t\t\tday += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tstartPos++;","\t\t\twhile (line.substr(startPos, 1) != \")\") { //grab everything until the last )","\t\t\t\thour += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tSchool* mySnap = new Cdh(className, day, hour);","\t\t\t//myCdh.push_back(mySnap);","\t\t\tmySchool.push_back(mySnap);","\t\t\toutfile << line;","\t\t}","\t\telse if (firstThree == \"cr\") {","\t\t\tstring className = \"\";","\t\t\tstring room = \"\";","\t\t\tclassName = line.substr(3, line.find(\",\")-3);","\t\t\tint startPos = line.find(\",\") + 1;","\t\t\twhile (line.substr(startPos, 1) != \")\") {","\t\t\t\troom += line.substr(startPos, 1);","\t\t\t\tstartPos++;","\t\t\t}","\t\t\tSchool* mySnap = new Cr(className, room);","\t\t\t//myCr.push_back(mySnap);","\t\t\tmySchool.push_back(mySnap);","\t\t\toutfile << line;","\t\t}","\t\telse {","\t\t\tif (line != \"\" && line != \" \") {","\t\t\t\toutfile << \"**Error: \" << line;","\t\t\t}","\t\t}","\t\toutfile << endl;","\t}","\t//Concatonate all the separate vectors","\t/*","\tfor (int i = 0; i < myCsg.size(); i++) {","\t\tmySchool.push_back(myCsg[i]);","\t}","\tfor (int i = 0; i < myCdh.size(); i++) {","\t\tmySchool.push_back(myCdh[i]);","\t}","\tfor (int i = 0; i < myCr.size(); i++) {","\t\tmySchool.push_back(myCr[i]);","\t}","\t*/","\toutfile << \"Vectors:\" << endl;","\tfor (int i = 0; i < mySchool.size(); i++) {","\t\toutfile<< mySchool[i]->toString()<<endl;","\t}","\toutfile << \"\\nCourse Grades:\" << endl;","\tfor (int i = 0; i < mySchool.size(); i++) {","\t\tstring courseName;","\t\tstring courseDay;","\t\tstring courseRoom;","\t\tint studentNumber;","\t\tstring gradeGiven;","","\t\tif (mySchool[i]->getName()==\"cr\") {","\t\t\tcourseName = mySchool[i]->getClassName();","\t\t\tcourseRoom = mySchool[i]->getClassRoom();","\t\t\tcout << \"course name \" << courseName;","\t\t\tfor (int j = 0; j < mySchool.size(); j++) {","\t\t\t\tif (mySchool[j]->getName() == \"cdh\") {","\t\t\t\t\tif (mySchool[j]->getClassName() == courseName) {","\t\t\t\t\t\tstring newdayofweek = mySchool[j]->getDayOfWeek();","\t\t\t\t\t\tcourseDay = courseDay + newdayofweek;","\t\t\t\t\t}","\t\t\t\t\tcout << \"\\nCourseday \" << courseDay;","\t\t\t\t}","\t\t\t}","\t\t\tfor(int k=0;k<mySchool.size();k++){","\t\t\t\tif ((mySchool[k]->getName() == \"csg\") && (mySchool[k]->getClassName() == courseName)) {","\t\t\t\t\tstudentNumber = mySchool[k]->getStuNum();","\t\t\t\t\tgradeGiven = mySchool[k]->getGrade();","\t\t\t\t\tcout << \"\\n StudentNumber\" << studentNumber<<\", \"<<mySchool[k]->getName()<<mySchool[k]->getStuNum();","\t\t\t\t\tfor (int l = 0; l < mySchool.size(); l++) {","\t\t\t\t\t\tif ((mySchool[l]->getName() == \"snap\")&&(mySchool[l]->getStuNum() == studentNumber)) {","\t\t\t\t\t\t\toutfile << courseName << \" \" << courseDay << \", \" << courseRoom << \", \" << mySchool[l]->getStuName() << \", \" << studentNumber << \", \" << gradeGiven << endl;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\toutfile << endl;","\t\t}","\t}","\toutfile << \"Student Schedules:\\n\";","\tfor (int i = 0; i < mySchool.size(); i++) {","\t\tif (mySchool[i]->getName() == \"snap\") {","\t\t\tint studentNumber = mySchool[i]->getStuNum();","\t\t\toutfile << mySchool[i]->getStuName() << \", \" << studentNumber << \", \" << mySchool[i]->getStuA() << \", \" << mySchool[i]->getStuPhoneNumber() << endl;","\t\t\tfor (int j = 0; j < mySchool.size(); j++) {","\t\t\t\tif ((mySchool[j]->getName() == \"csg\") && (mySchool[j]->getStuNum() == studentNumber)) {","\t\t\t\t\tstring className = mySchool[j]->getClassName();","\t\t\t\t\tstring day;","\t\t\t\t\tstring hour;","\t\t\t\t\tstring location;","\t\t\t\t\tfor (int k = 0; k < mySchool.size(); k++) {","\t\t\t\t\t\tif ((mySchool[k]->getName() == \"cdh\") && (mySchool[k]->getClassName() == className)) {","\t\t\t\t\t\t\tday += mySchool[k]->getDayOfWeek();","\t\t\t\t\t\t\thour = mySchool[k]->getClassTime();","\t\t\t\t\t\t}","\t\t\t\t\t\telse if ((mySchool[k]->getName() == \"cr\") && (mySchool[k]->getClassName() == className)) {","\t\t\t\t\t\t\tlocation = mySchool[k]->getClassRoom();","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\toutfile << \"  \" << className << \" \" << day << \" \" << hour << \", \" << location << endl;","\t\t\t\t}","\t\t\t}","\t\t\toutfile << endl;","\t\t}","\t}","","\t//Delete everything","\t","\tfor (int i = 0; i < mySchool.size(); i++) {","\t\tdelete mySchool[i];","\t}","\t","\t//delete[] mySchool;","\treturn 0;","} "],"id":1}],[{"start":{"row":22,"column":1},"end":{"row":22,"column":2},"action":"insert","lines":["/"],"id":2},{"start":{"row":22,"column":2},"end":{"row":22,"column":3},"action":"insert","lines":["/"]}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":["/"],"id":3},{"start":{"row":11,"column":1},"end":{"row":11,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":["/"],"id":4},{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["/"],"id":5},{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":1},"action":"insert","lines":["/"],"id":6},{"start":{"row":14,"column":1},"end":{"row":14,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["/"],"id":7},{"start":{"row":15,"column":1},"end":{"row":15,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":1},"action":"insert","lines":["/"],"id":8},{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":1},"action":"insert","lines":["/"],"id":9},{"start":{"row":17,"column":1},"end":{"row":17,"column":2},"action":"insert","lines":["/"]}]]},"ace":{"folds":[],"scrolltop":58.71875,"scrollleft":0,"selection":{"start":{"row":17,"column":2},"end":{"row":17,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":2,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1538083297173,"hash":"3dcdaed7be36e779ace40b980085fa867a3abcce"}